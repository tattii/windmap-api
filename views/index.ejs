<!DOCTYPE html>
<html>
	<head>
		<meta charset=utf-8 />
		<title>WindMap / Surf / MSM</title>
		<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
		<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.4/mapbox.css' rel='stylesheet' />
		<style>
			body { margin:0; padding:0; }
			#map { position:absolute; top:0; bottom:0; width:100%; z-index:1; }
			#cv-container { position:absolute; top:0; bottom:0; width:100%; z-index:2; }
			#cv { display:block; user-select:none; -webkit-user-select:none;}
			#overlay { position:absolute; top:0; bottom:0; width:100%; z-index:4; }
			#loading { position:absolute; width:100px; height:120px; top:50%; left:50%; margin-left:-50px; margin-top:-50px; z-index:11; }
			#date { position:absolute; left:10px; top:0; z-index:20; }
			#date h1 { color:#fff; font-size:24px; }
		</style>
	</head>
	<body>
		<div id='map'></div>
		<div id='cv-container'>
			<canvas id="cv"></canvas>
		</div>
		<div id="overlay"></div>
		<div id="loading"></div>
		<div id="date">
			<h1>2015-01-10 09:00 / Surface / MSM</h1>
		</div>

		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
		<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.4/mapbox.js'></script>
		<script src="/js/underscore.js"></script>
		<script src="/js/stream.js"></script>
		<script src="/js/sonic.js"></script>
		<script>
			$(function() {
				// map
				var map_id = 'tattii.j1a9fl0a';
				var mapboxTiles = L.tileLayer(
					'https://{s}.tiles.mapbox.com/v3/' + map_id + '/{z}/{x}/{y}.png',
					{ attribution: '<a href="http://www.mapbox.com/about/maps/" target="_blank">Mapbox</a>' }
				);

				var map = L.map('map', {
						center: [35, 136],
						zoom: 9,
						minZoom: 5,
						maxZoom: 13,
						zoomControl: false,
						attributionControl: false
					})
					.addLayer(mapboxTiles);

				// canvas
				var cv = document.getElementById('cv');
				var ctx = cv.getContext('2d');
				cv.width = $(window).width();
				cv.height = $(window).height();
				ctx.globalAlpha = 0.9;

				var wind_field;
				var stream = new Stream({ x:[0,map.getSize().x], y:[0,map.getSize().y] });
				loading();
				getWindData();


				// events -----------------------------------------------------
				var MOVE_END_WAIT = 1000;
				var mousemove = false;
				var mousedown = false;

				$("#overlay").on("mousedown", function(e) {
					mousemove = false;
					mousedown = e;

				}).on("mousemove", function(e) {
					if ( mousedown && !mousemove  ){
						$("#map").css({"z-index": 10});
						mousemove = true;

						//TODO how to start map drag?
						var p = L.point(mousedown.clientX, mousedown.clientY);
						map.fire("mousedown", {
							latlng: map.layerPointToLatLng(p),
							layerPoint: p,
							containerPoint: p
						});
					}

				}).on("mouseup", function(e) {
					if (! mousemove ){
						showPointWind(e);
					}
					mousedown = false;
				});

				var req;
				var moveend_wait = _.debounce(getWindData, MOVE_END_WAIT);
				map.on("moveend", moveend_wait);

				function getWindData() {
					$("#loading").show();
					var b = map.getBounds();
					var str_bounds = b.getNorth() +","+ b.getWest() +","+ b.getSouth() +","+ b.getEast();
					var start = Date.now();
					if (req) req.abort();
					req = $.ajax({
						url: "http://windmap-surf.herokuapp.com/wind",
						type: "GET",
						dataType: "jsonp",
						data: { bounds: str_bounds },
						success: function(data, status) {
							var end = Date.now();
							var elapsed = end - start;
							console.log("get wind data: " + elapsed + "ms");
							console.log(data);
							draw(data);
						}
					});
				}

				function draw(wind_data) {
					// projection
					$("#map").css({"z-index": 1});
					var b = map.getBounds();
					var proj = new SimpleProjection(
						{ x:0,   y:0,                           lat:b.getNorth(), lng:b.getWest() },
						{ x:map.getSize().x, y:map.getSize().y, lat:b.getSouth(), lng:b.getEast() }
					);

					// stream  //TODO GribWind変更
					var h = wind_data.header;
					wind_field = new GribWind({
						u_data: wind_data.wind_u,
						v_data: wind_data.wind_v,
						nx: h.nx,
						ny: h.ny,
						p0: [h.la1, h.lo1],
						p1: [h.la2, h.lo2],
						dx: h.dx,
						dy: h.dy
					});

					stream.setField(wind_field, proj);
					$("#loading").hide();
					stream.animate(ctx);
				}

				
				function showPointWind(point) {
					console.log(point);
				}


				function loading() {
					var loader = {
						width: 100,
						height: 100,
						stepsPerFrame: 1,
						trailLength: 1,
						pointDistance: .025,
						strokeColor: '#05E2FF',
						fps: 20,
						setup: function() {
							this._.lineWidth = 2;
						},
						step: function(point, index) {
							var cx = this.padding + 50,
							cy = this.padding + 50,
							_ = this._,
							angle = (Math.PI/180) * (point.progress * 360);
							this._.globalAlpha = Math.max(.5, this.alpha);
							_.beginPath();
							_.moveTo(point.x, point.y);
							_.lineTo(
								(Math.cos(angle) * 35) + cx,
								(Math.sin(angle) * 35) + cy
							);
							_.closePath();
							_.stroke();
							_.beginPath();
							_.moveTo(
								(Math.cos(-angle) * 32) + cx,
								(Math.sin(-angle) * 32) + cy
							);
							_.lineTo(
								(Math.cos(-angle) * 27) + cx,
								(Math.sin(-angle) * 27) + cy
							);
							_.closePath();
							_.stroke();
						},
						path: [
							['arc', 50, 50, 40, 0, 360]
						]
					};
					var sonic = new Sonic(loader);
					$("#loading").append(sonic.canvas);
					sonic.play();
				}


			});
		</script>
	</body>
</html>
