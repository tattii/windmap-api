<!DOCTYPE html>
<html>
	<head>
		<meta charset=utf-8 />
		<title>WindMap / Surf / MSM</title>
		<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
		<link href='https://api.tiles.mapbox.com/mapbox.js/v1.6.4/mapbox.css' rel='stylesheet' />
		<style>
			body { margin:0; padding:0; }
			#map { position:absolute; top:0; bottom:0; width:100%; z-index:1; }
			#cv-container { position:absolute; top:0; bottom:0; width:100%; z-index:2; }
			#cv { display:block; user-select:none; -webkit-user-select:none;}
			#overlay { position:absolute; top:0; bottom:0; width:100%; z-index:4; }
			#loading { position:absolute; width:100px; height:120px; top:50%; left:50%; margin-left:-50px; margin-top:-50px; z-index:11; }
			#date { position:absolute; left:10px; top:0; z-index:20; }
			#date h1 { color:#fff; font-size:24px; }
		</style>
	</head>
	<body>
		<div id='map'></div>
		<div id="loading"></div>
		<div id="date">
			<h1>2015-01-10 09:00 / Surface / MSM</h1>
		</div>

		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
		<script src='https://api.tiles.mapbox.com/mapbox.js/v1.6.4/mapbox.js'></script>
		<script src="/js/underscore.js"></script>
		<script src="/js/stream.js"></script>
		<script src="/js/sonic.js"></script>
		<script>
			$(function() {
				// map
				var map_id = 'tattii.j1a9fl0a';
				var mapboxTiles = L.tileLayer(
					'https://{s}.tiles.mapbox.com/v3/' + map_id + '/{z}/{x}/{y}.png',
					{ attribution: '<a href="http://www.mapbox.com/about/maps/" target="_blank">Mapbox</a>' }
				);

				var map = L.map('map', {
						center: [35, 136],
						zoom: 9,
						minZoom: 5,
						maxZoom: 13,
						zoomControl: false,
						attributionControl: false
					})
					.addLayer(mapboxTiles);


				loading();
				var wind_field;
				var req;
				function getWindData(callback, s) {
					$("#loading").show();
					var b = map.getBounds();
					var str_bounds = b.getNorth() +","+ b.getWest() +","+ b.getSouth() +","+ b.getEast();
					var start = Date.now();
					if (req) req.abort();
					req = $.ajax({
						url: "http://windmap-surf.herokuapp.com/wind",
						type: "GET",
						dataType: "jsonp",
						data: { bounds: str_bounds },
						success: function(data, status) {
							var end = Date.now();
							var elapsed = end - start;
							console.log("get wind data: " + elapsed + "ms");
							console.log(data);
							$("#loading").hide();
							callback(data, s);
						}
					});
				}

				
				var StreamLayer = L.Class.extend({
					initialize: function(getWindData) {
						this._getWindData = getWindData
					},

					onAdd: function(map) {
						this._map = map;
						this._width  = map.getSize().x;	
						this._height = map.getSize().y;	

						this._el = L.DomUtil.create('canvas', 'stream-layer leaflet-zoom-hide');
						map.getPanes().overlayPane.appendChild(this._el);

						var cv = document.getElementsByClassName("stream-layer")[0];
						this._ctx = cv.getContext('2d');
						cv.width = this._width;
						cv.height = this._height;
						this._ctx.globalAlpha = 0.9;

						this.stream = new Stream({ x:[0, this._width], y:[0, this._height] });

						map.on('viewreset', this._reset, this);
						map.on('moveend', this._reset, this);
						this._reset();
					},

					onRemove: function(map) {
						map.getPanes().overlayPane.removeChild(this._el);
						map.off('viewreset', this._reset, this);
					},

					_reset: function() {
						L.DomUtil.setOpacity(this._el, 0);

						this._getWindData(function(wind_data, t) {
							// projection
							var b = t._map.getBounds();
							var proj = new SimpleProjection(
								{ x:0,   y:0,              lat:b.getNorth(), lng:b.getWest() },
								{ x:t._width, y:t._height, lat:b.getSouth(), lng:b.getEast() }
							);

							t._ctx.clearRect(0, 0, t._width, t._height);

							// stream
							wind_field = new GribWind(wind_data);
							t.stream.setField(wind_field, proj);
							t.stream.animate(t._ctx);

							// move canvas position
							var pos = t._map.latLngToLayerPoint(b.getNorthWest());
							L.DomUtil.setPosition(t._el, pos);
							L.DomUtil.setOpacity(t._el, 1);
						}, this);
					}



				});


				map.addLayer(new StreamLayer(getWindData));



				function showPointWind(point) {
					console.log("point");
				}


				/**
				 * loading animation by sonic.js
				 */
				function loading() {
					var loader = {
						width: 100,
						height: 100,
						stepsPerFrame: 1,
						trailLength: 1,
						pointDistance: .025,
						strokeColor: '#05E2FF',
						fps: 20,
						setup: function() {
							this._.lineWidth = 2;
						},
						step: function(point, index) {
							var cx = this.padding + 50,
							cy = this.padding + 50,
							_ = this._,
							angle = (Math.PI/180) * (point.progress * 360);
							this._.globalAlpha = Math.max(.5, this.alpha);
							_.beginPath();
							_.moveTo(point.x, point.y);
							_.lineTo(
								(Math.cos(angle) * 35) + cx,
								(Math.sin(angle) * 35) + cy
							);
							_.closePath();
							_.stroke();
							_.beginPath();
							_.moveTo(
								(Math.cos(-angle) * 32) + cx,
								(Math.sin(-angle) * 32) + cy
							);
							_.lineTo(
								(Math.cos(-angle) * 27) + cx,
								(Math.sin(-angle) * 27) + cy
							);
							_.closePath();
							_.stroke();
						},
						path: [
							['arc', 50, 50, 40, 0, 360]
						]
					};
					var sonic = new Sonic(loader);
					$("#loading").append(sonic.canvas);
					sonic.play();
				}


			});
		</script>
	</body>
</html>
